
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';
import { v4 as uuidv4 } from 'uuid';

const SUPABASE_URL = "https://ldcfqpmbfweohyhpmoee.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImxkY2ZxcG1iZndlb2h5aHBtb2VlIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDIxNjMwNDMsImV4cCI6MjA1NzczOTA0M30.SPyIo_Ka-XnPePQDBNGAziILdi0o2j9qj70-7GU6pto";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Helper function to upload an image to Supabase storage
export const uploadImage = async (file: File, bucket: string = 'property_images') => {
  try {
    const fileExt = file.name.split('.').pop();
    const fileName = `${uuidv4()}.${fileExt}`;
    const filePath = `${fileName}`;
    
    const { data, error } = await supabase.storage
      .from(bucket)
      .upload(filePath, file);
      
    if (error) {
      throw error;
    }
    
    // Get the public URL
    const { data: { publicUrl } } = supabase.storage
      .from(bucket)
      .getPublicUrl(filePath);
      
    return publicUrl;
  } catch (error) {
    console.error('Error uploading image:', error);
    throw error;
  }
};

// Helper function to remove an image from Supabase storage
export const removeImage = async (imagePath: string, bucket: string = 'property_images') => {
  try {
    // Extract the filename from the URL
    const pathParts = imagePath.split('/');
    const fileName = pathParts[pathParts.length - 1];
    
    const { error } = await supabase.storage
      .from(bucket)
      .remove([fileName]);
      
    if (error) {
      throw error;
    }
    
    return true;
  } catch (error) {
    console.error('Error removing image:', error);
    return false;
  }
};
